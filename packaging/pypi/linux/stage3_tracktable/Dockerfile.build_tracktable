ARG SOURCE_IMAGE
FROM ${SOURCE_IMAGE}

ARG PYTHON_IMPLEMENTATION
ARG CI_PROJECT_DIR
ARG MANYLINUX_TAG
ENV MANYLINUX_TAG=${MANYLINUX_TAG}
ARG NIGHTLY
ENV NIGHTLY=${NIGHTLY}
ARG DEVELOPMENT
ENV DEVELOPMENT=${DEVELOPMENT}
ARG DEV_NUMBER
ENV DEV_NUMBER=${DEV_NUMBER}
ENV CI_PROJECT_DIR=${CI_PROJECT_DIR}
ENV PYTHON_IMPLEMENTATION=${PYTHON_IMPLEMENTATION}
ENV PYTHON_HOME=/opt/python/${PYTHON_IMPLEMENTATION}-${PYTHON_IMPLEMENTATION}m

COPY create_dummy_libpython.sh .
COPY install_numpy.sh .

RUN ./create_dummy_libpython.sh ${PYTHON_IMPLEMENTATION}
RUN ./install_numpy.sh ${PYTHON_IMPLEMENTATION}

WORKDIR /opt/src
RUN mkdir tracktable
COPY tracktable tracktable/src
RUN mkdir tracktable/build

WORKDIR /opt/src/tracktable/build
COPY configure_tracktable.sh .
RUN ./configure_tracktable.sh ${PYTHON_IMPLEMENTATION} ${MANYLINUX_TAG}

# This will run the build with standard CMake output.
RUN make -j 4 install && make clean

# Use this line instead if you want to see all the compiler calls in 
# their messy glory.
# RUN VERBOSE=1 make -j 4 install && make clean

ENTRYPOINT ["/bin/bash", "-c", "-l"]
